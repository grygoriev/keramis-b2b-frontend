// src/components/sider/mapCategoryItem.jsx
import { ProductOutlined }       from '@ant-design/icons';
import { useNavigate }           from 'react-router-dom';
import { useSideMenu, useMenuStack } from '../../contexts';
import { useSelector }           from 'react-redux';
import { selectUserRole }        from '../../store/authSlice';
import { Grid }                  from 'antd';

const { useBreakpoint } = Grid;

/* helper: –∏–∫–æ–Ω–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω–∞—è */
const icon = (i) =>
	i ? <img src={`/images/icons/${i}.svg`} alt="" style={{ width:18 }}/>
		: <ProductOutlined/>;

/**
 * –•—É–∫-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø—É–Ω–∫—Ç–æ–≤ ‚Äú–¥–µ—Ä–µ–≤–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π‚Äù
 * @param {boolean} isPublic ‚Äì –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ –≤ PublicLayout
 */
export function useCategoryMapItem(isPublic = false){
	const nav           = useNavigate();
	const { closeMenu } = useSideMenu();
	const { reset }     = useMenuStack();

	const bp      = useBreakpoint();
	const mobile  = !bp.lg;          // mobile ‚Üí < 992 px

	/* –ø–µ—Ä–µ—Ö–æ–¥ + –∑–∞–∫—Ä—ã—Ç—å –±—É—Ä–≥–µ—Ä */
	const go = (slug) => {
		nav(`/category/${slug}`);
		closeMenu();
		if (!isPublic) reset();
	};

	/* üëâ –∫–∞—Å—Ç–æ–º–Ω–∞—è —Å—Ç—Ä–µ–ª–∫–∞ –¢–û–õ–¨–ö–û –Ω–∞ mobile
	   ‚Äì –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ, —á—Ç–æ–±—ã label-–∫–ª–∏–∫ –Ω–µ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª */
	const makeExpandIcon = (open) => (
		<span
			onClick={(e)=>e.stopPropagation()}
			style={{ marginLeft:'auto', display:'flex', width:16, justifyContent:'center' }}
		>
      {open ? '‚à®' : '‚Ä∫'}
    </span>
	);

	/* —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –º—ç–ø–ø–µ—Ä */
	const map = (c) => {
		const kids = c.children?.length;

		return {
			key : c.slug,
			icon: icon(c.icon),

			label: (
				<span onClick={() => go(c.slug)}>
          {c.name}
        </span>
			),

			// –Ω–∞ desktop –∫–ª–∏–∫–∞–µ–º –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É, –Ω–∞ mobile ‚Äì —Ç–æ–ª—å–∫–æ label
			...(kids && !mobile && { onTitleClick: () => go(c.slug) }),

			// —Å—Ç—Ä–µ–ª–∫–∞-—Ä–∞—Å–∫—Ä—ã–≤–∞—Ç–µ–ª—å ‚Äì —Ç–æ–ª—å–∫–æ mobile
			...(kids && mobile && {
				expandIcon: ({ isOpen }) => makeExpandIcon(isOpen),
			}),

			children: kids ? c.children.map(map) : undefined,
		};
	};

	return map;
}
